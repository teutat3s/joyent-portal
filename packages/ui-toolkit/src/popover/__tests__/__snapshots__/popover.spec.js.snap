// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Popover Divider 1`] = `
.c0 {
  width: calc(100% + 2.25rem);
  border-top: 0.0625rem solid rgb(216,216,216);
}

<div
  className="c0"
/>
`;

exports[`Popover Popover 1`] = `
Array [
  <div
    box={false}
    className=""
    onClick={undefined}
    onMouseEnter={undefined}
    onMouseLeave={undefined}
    style={
        Object {
            "display": "inline-block",
          }
    }
    tag={false}
>
    Hello
</div>,
  .c2 {
  width: calc(100% + 2.25rem);
  border-top: 0.0625rem solid rgb(216,216,216);
}

.c1 {
  display: block;
  text-align: left;
  font-size: 1rem;
  cursor: pointer;
}

.c1:hover {
  color: rgb(53,53,53);
  -webkit-text-fill-color: currentcolor;
}

.c0 {
  box-shadow: 0 0.125rem 0.375rem rgba(0,0,0,0.1);
  border: 0.0625rem solid rgb(216,216,216);
  padding: 0.9375rem 1.125rem 0.1875rem 1.125rem;
  background: rgb(255,255,255);
  color: rgb(73,73,73);
  -webkit-text-fill-color: currentcolor;
  z-index: 999;
  border-radius: 0.25rem;
}

.c0 .b {
  width: 0;
  height: 0;
  border-style: solid;
  position: absolute;
}

.c0[data-placement^='top'] .b {
  border-width: 0.375rem 0.375rem 0 0.375rem;
  border-color: rgb(255,255,255) transparent transparent transparent;
  bottom: -0.375rem;
}

.c0[data-placement^='top'] .b:after {
  content: '';
  display: block;
  position: absolute;
  border-width: 0.4375rem 0.4375rem 0 0.4375rem;
  border-color: rgb(216,216,216) transparent transparent transparent;
  border-style: solid;
  left: -0.4375rem;
  top: -0.375rem;
  z-index: -1;
}

.c0[data-placement^='bottom'] .b {
  border-width: 0 0.375rem 0.375rem 0.375rem;
  border-color: transparent transparent rgb(255,255,255) transparent;
  top: -0.375rem;
}

.c0[data-placement^='bottom'] .b:after {
  content: '';
  display: block;
  position: absolute;
  border-width: 0 0.4375rem 0.4375rem 0.4375rem;
  border-color: transparent transparent rgb(216,216,216) transparent;
  border-style: solid;
  top: -0.0625rem;
  left: -0.4375rem;
  z-index: -1;
}

.c0[data-placement='top-start'] .b,
.c0[data-placement='bottom-start'] .b {
  left: 0.375rem;
}

.c0[data-placement='top-end'] .b,
.c0[data-placement='bottom-end'] .b {
  right: 0.375rem;
}

.c0[data-placement='top'] .b,
.c0[data-placement='bottom'] .b {
  left: calc(50% - 0.375rem);
}

.c0[data-placement^='left'] .b {
  border-width: 0.375rem 0 0.375rem 0.375rem;
  border-color: transparent transparent transparent rgb(255,255,255);
  right: -0.75rem;
}

.c0[data-placement^='left'] .b:after {
  content: '';
  display: block;
  position: absolute;
  border-width: 0.4375rem 0 0.4375rem 0.4375rem;
  border-color: transparent transparent transparent rgb(216,216,216);
  border-style: solid;
  left: -0.375rem;
  width: 0;
  height: 0;
  top: -0.4375rem;
  z-index: -1;
}

.c0[data-placement^='right'] .b {
  border-width: 0.375rem 0.375rem 0.375rem 0;
  border-color: transparent rgb(255,255,255) transparent transparent;
  left: -0.75rem;
}

.c0[data-placement^='right'] .b:after {
  content: '';
  display: block;
  position: absolute;
  border-width: 0.4375rem 0.4375rem 0.4375rem 0;
  border-color: transparent rgb(216,216,216) transparent transparent;
  border-style: solid;
  left: -0.125rem;
  width: 0;
  height: 0;
  top: -0.4375rem;
  z-index: -1;
}

.c0[data-placement='left-start'] .b,
.c0[data-placement='right-start'] .b {
  top: 0.375rem;
}

.c0[data-placement='left-end'] .b,
.c0[data-placement='right-end'] .b {
  bottom: 0.375rem;
}

.c0[data-placement='left'] .b,
.c0[data-placement='right'] .b {
  top: calc(50% - 0.375rem);
}

<div
    className="c0"
    data-placement={undefined}
    data-x-out-of-boundaries={undefined}
    style={
        Object {
            "opacity": 0,
            "pointerEvents": "none",
            "position": "absolute",
          }
    }
>
    <span
        className="c1"
        onClick={[Function]}
    >
        Scale
    </span>
    <span
        className="c1"
        onClick={[Function]}
    >
        Restart
    </span>
    <span
        className="c1"
        onClick={[Function]}
    >
        Stop
    </span>
    <div
        className="c2"
    />
    <span
        className="c1"
        onClick={[Function]}
    >
        Delete
    </span>
    <span
        style={Object {}}
    >
        <span
            className="b"
        />
    </span>
</div>,
]
`;
